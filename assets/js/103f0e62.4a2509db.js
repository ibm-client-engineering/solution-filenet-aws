"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2],{8341:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var s=a(5893),d=a(1151);const t={id:"solution-deploy-openldap",sidebar_position:1,title:"OpenLDAP"},l=void 0,i={id:"Create/Deploy/solution-deploy-openldap",title:"OpenLDAP",description:"Deploy OpenLDAP",source:"@site/docs/3-Create/Deploy/openldap.mdx",sourceDirName:"3-Create/Deploy",slug:"/Create/Deploy/solution-deploy-openldap",permalink:"/solution-filenet-aws/Create/Deploy/solution-deploy-openldap",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-client-engineering/solution-filenet-aws/tree/main/packages/create-docusaurus/templates/shared/docs/3-Create/Deploy/openldap.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"solution-deploy-openldap",sidebar_position:1,title:"OpenLDAP"},sidebar:"tutorialSidebar",previous:{title:"Deployment of FileNet",permalink:"/solution-filenet-aws/Create/Deploy/Introduction"},next:{title:"Postgresql",permalink:"/solution-filenet-aws/Create/Deploy/solution-deploy-postgres"}},c={},o=[{value:"Deploy OpenLDAP",id:"deploy-openldap",level:2},{value:"Create the config maps",id:"create-the-config-maps",level:3},{value:"Create the LDAP Secret",id:"create-the-ldap-secret",level:3},{value:"Create the deployment",id:"create-the-deployment",level:3},{value:"Create a service for openldap",id:"create-a-service-for-openldap",level:3},{value:"Verifying installation",id:"verifying-installation",level:3},{value:"Appendix",id:"appendix",level:2},{value:"Adding Extra Users",id:"adding-extra-users",level:3}];function r(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"deploy-openldap",children:"Deploy OpenLDAP"}),"\n",(0,s.jsx)(n.p,{children:"Let's create a namespace for openldap (This is optional. For the rest of this, we'll just stick openldap into our filenet namespace)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl create namespace filenet-openldap\nkubectl label namespace filenet-openldap app=filenet-openldap\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set our context to the new namespace (only if you created a separate namespace to run openldap in)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl config set-context --current --namespace=filenet-openldap\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"The files we're creating below can be grabbed from these links. These are purely reference and may still need to be edited to suit your environment."}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(2221).Z+"",children:"openldap-schemas-configmap.yaml"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(5432).Z+"",children:"openldap-ldif-configmap.yaml"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(1678).Z+"",children:"openldap-env-configmap.yaml"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(4738).Z+"",children:"openldap-admin-secret.yaml"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(2403).Z+"",children:"openldap-secrets.yaml"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(7734).Z+"",children:"openldap-deploy.yaml"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(7188).Z+"",children:"openldap-service.yaml"})}),"\n"]})]}),"\n",(0,s.jsx)(n.h3,{id:"create-the-config-maps",children:"Create the config maps"}),"\n",(0,s.jsx)(n.p,{children:"Let's create some configmaps for the ldap service"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(2221).Z+"",children:"Example here"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'showLineNumbers title="openldap-schemas-configmap.yaml"',children:"kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: openldap-customschema\n  labels:\n    app: filenet-openldap\ndata:\n  custom.ldif: |-\n    dn: cn=sds,cn=schema,cn=config\n    objectClass: olcSchemaConfig\n    cn: sds\n    olcAttributeTypes: {0}( 1.3.6.1.4.1.42.2.27.4.1.6 NAME 'ibm-entryuuid' DESC \n      'Uniquely identifies a directory entry throughout its life.' EQUALITY caseIgnoreMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 SINGLE-VALUE )\n    olcObjectClasses: {0}( 1.3.6.1.4.1.42.2.27.4.2.1 NAME 'sds' DESC 'sds' SUP top AUXILIARY MUST ( cn $ ibm-entryuuid ) )\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-schemas-configmap.yaml\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(5432).Z+"",children:"Example here"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="openldap-ldif-configmap.yaml"',children:"kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: openldap-customldif\n  labels:\n    app: filenet-openldap\ndata:\n  01-default-users.ldif: |-\n    # cp.internal\n    dn: dc=filenet,dc=internal\n    objectClass: top\n    objectClass: dcObject\n    objectClass: organization\n    o: filenet.internal\n    dc: filenet\n\n    # Units\n    dn: ou=Users,dc=filenet,dc=internal\n    objectClass: organizationalUnit\n    ou: Users\n\n    dn: ou=Groups,dc=filenet,dc=internal\n    objectClass: organizationalUnit\n    ou: Groups\n\n    # Users\n    dn: uid=cpadmin,ou=Users,dc=filenet,dc=internal\n    objectClass: inetOrgPerson\n    objectClass: top\n    objectClass: sds\n    cn: cpadmin\n    sn: cpadmin\n    uid: cpadmin\n    mail: cpadmin@cp.internal\n    userpassword: Password\n    employeeType: admin\n    ibm-entryuuid: e6c41859-ced3-4772-bfa3-6ebbc58ec78a\n\n    dn: uid=cpuser,ou=Users,dc=filenet,dc=internal\n    objectClass: inetOrgPerson\n    objectClass: top\n    objectClass: sds\n    cn: cpuser\n    sn: cpuser\n    uid: cpuser\n    mail: cpuser@cp.internal\n    userpassword: Password\n    ibm-entryuuid: 30183bb0-1012-4d23-8ae2-f94816b91a75\n\n    # Groups\n    dn: cn=cpadmins,ou=Groups,dc=filenet,dc=internal\n    objectClass: groupOfNames\n    objectClass: top\n    objectClass: sds\n    cn: cpadmins\n    ibm-entryuuid: 4196cb9e-1ed7-4c02-bb0d-792cb7bfa768\n    member: uid=cpadmin,ou=Users,dc=filenet,dc=internal\n\n    dn: cn=cpusers,ou=Groups,dc=filenet,dc=internal\n    objectClass: groupOfNames\n    objectClass: top\n    objectClass: sds\n    cn: cpusers\n    ibm-entryuuid: fc4ded27-8c6a-4a8c-ad9e-7be65369758c\n    member: uid=cpadmin,ou=Users,dc=filenet,dc=internal\n    member: uid=cpuser,ou=Users,dc=filenet,dc=internal\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-ldif-configmap.yaml\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create an env configmap"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="openldap-env-configmap.yaml"',children:"kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: openldap-env\n  labels:\n    app: filenet-openldap\ndata:\n  BITNAMI_DEBUG: 'true'\n  LDAP_ORGANISATION: filnet.internal\n  LDAP_ROOT: 'dc=filenet,dc=internal'\n  LDAP_DOMAIN: filenet.internal\n  LDAP_CUSTOM_LDIF_DIR: /ldifs\n  LDAP_ADMIN_USERNAME: admin\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-env-configmap.yaml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-the-ldap-secret",children:"Create the LDAP Secret"}),"\n",(0,s.jsxs)(n.p,{children:["And finally create a secret for the LDAP_ADMIN_PASSWORD. In this example we are setting the default admin password to ",(0,s.jsx)(n.code,{children:"p@ssw0rd"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="openldap-admin-secret.yaml"',children:"kind: Secret\napiVersion: v1\nmetadata:\n  name: openldap\n  labels:\n    app: filenet-openldap\nstringData:\n  LDAP_ADMIN_PASSWORD: p@ssw0rd\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-admin-secret.yaml\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'showLineNumbers title="openldap-secrets.yaml"',children:'kind: Secret\napiVersion: v1\nmetadata:\n  name: ldap-bind-secret\n  namespace: filenet\n  labels:\n    app: filenet-openldap\nstringData:\n  ldapUsername: "cn=admin,dc=filenet,dc=internal"\n  ldapPassword: p@ssw0rd\n  externalLdapUsername: "cn=admin,dc=filenet,dc=internal"\n  externalLdapPassword: p@ssw0rd\n'})}),"\n",(0,s.jsx)(n.p,{children:"Apply it to the cluster"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-secrets.yaml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-the-deployment",children:"Create the deployment"}),"\n",(0,s.jsx)(n.p,{children:"Now let's create a deployment."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="openldap-deploy.yaml"',children:"kind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: openldap-deploy\n  labels:\n    app: filenet-openldap\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: filenet-openldap\n  template:\n    metadata:\n      labels:\n        app: filenet-openldap\n    spec:\n      containers:\n        - name: openldap\n          resources:\n            requests:\n              cpu: 100m\n              memory: 256Mi\n            limits:\n              cpu: 500m\n              memory: 512Mi\n          startupProbe:\n            tcpSocket:\n              port: ldap-port\n            timeoutSeconds: 1\n            periodSeconds: 10\n            successThreshold: 1\n            failureThreshold: 30\n          readinessProbe:\n            tcpSocket:\n              port: ldap-port\n            initialDelaySeconds: 60\n            timeoutSeconds: 1\n            periodSeconds: 10\n            successThreshold: 1\n            failureThreshold: 10\n          livenessProbe:\n            tcpSocket:\n              port: ldap-port\n            initialDelaySeconds: 60\n            timeoutSeconds: 1\n            periodSeconds: 10\n            successThreshold: 1\n            failureThreshold: 10\n          terminationMessagePath: /dev/termination-log\n          ports:\n            - name: ldap-port\n              containerPort: 1389\n              protocol: TCP\n          image: 'bitnami/openldap:latest'\n          imagePullPolicy: Always\n          securityContext:\n            capabilities:\n              drop:\n                - ALL\n              add:\n                - NET_BIND_SERVICE\n            runAsNonRoot: true\n            allowPrivilegeEscalation: false\n            seccompProfile:\n              type: RuntimeDefault\n          volumeMounts:\n            - name: custom-schema-files\n              mountPath: /schemas/\n            - name: custom-ldif-files\n              mountPath: /ldifs/\n          terminationMessagePolicy: File\n          envFrom:\n            - configMapRef:\n                name: openldap-env\n            - secretRef:\n                name: openldap\n      # If you have a custom pull secret and have staged the image somewhere\n#      imagePullSecrets:\n#        - name: <CUSTOM PULL SECRET>\n      #\n      volumes:\n        - name: custom-schema-files\n          configMap:\n            name: openldap-customschema\n            defaultMode: 420\n        - name: custom-ldif-files\n          configMap:\n            name: openldap-customldif\n            defaultMode: 420\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-deploy.yaml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-a-service-for-openldap",children:"Create a service for openldap"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="openldap-service.yaml"',children:"kind: Service\napiVersion: v1\nmetadata:\n  name: openldap\n  labels:\n    app: filenet-openldap\nspec:\n  ports:\n    - name: ldap-port\n      protocol: TCP\n      port: 389\n      targetPort: ldap-port\n  type: NodePort\n  selector:\n    app: filenet-openldap\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-service.yaml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"verifying-installation",children:"Verifying installation"}),"\n",(0,s.jsx)(n.p,{children:"Verifying on the openldap pod"}),"\n",(0,s.jsx)(n.p,{children:"Retrieve the ldap pod name"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\nopenldap-deploy-67888c7868-9ncrc   1/1     Running   0          5m15s\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run an ldapsearch in the pod"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl exec -it openldap-deploy-67888c7868-9ncrc -- ldapsearch -x -b \"dc=filenet,dc=internal\" -H ldap://localhost:1389 -D 'cn=admin,dc=filenet,dc=internal' -w p@ssw0rd\n"})}),"\n",(0,s.jsx)(n.p,{children:"It should return a list of the users and groups configured in the config map."}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"If users are not being created in the ldap instance, you can verify the ldifs are valid with the following command in the ldap pod:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'ldapadd -x -D "cn=admin,dc=filenet,dc=internal" -w p@ssw0rd -H ldapi:/// -f /ldifs/01-default-users.ldif\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"appendix",children:"Appendix"}),"\n",(0,s.jsx)(n.h3,{id:"adding-extra-users",children:"Adding Extra Users"}),"\n",(0,s.jsx)(n.p,{children:"In order to add extra users, you must update the openldap-ldif. This is best done by updating our openldap-ldif-configmap.yaml from above."}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"The example ldif is linked here. Once again, this is purely for reference and may still need to be edited to suit your environment."}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank",href:a(8437).Z+"",children:"openldap-ldif-extra-users-configmap.yaml"})}),"\n"]})]}),"\n",(0,s.jsx)(n.p,{children:"Additional users are highlighted below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="openldap-ldif-configmap.yaml"',children:"kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: openldap-customldif\n  labels:\n    app: filenet-openldap\ndata:\n  01-default-users.ldif: |-\n    # cp.internal\n    dn: dc=filenet,dc=internal\n    objectClass: top\n    objectClass: dcObject\n    objectClass: organization\n    o: filenet.internal\n    dc: filenet\n\n    # Units\n    dn: ou=Users,dc=filenet,dc=internal\n    objectClass: organizationalUnit\n    ou: Users\n\n    dn: ou=Groups,dc=filenet,dc=internal\n    objectClass: organizationalUnit\n    ou: Groups\n\n    # Users\n    dn: uid=cpadmin,ou=Users,dc=filenet,dc=internal\n    objectClass: inetOrgPerson\n    objectClass: top\n    objectClass: sds\n    cn: cpadmin\n    sn: cpadmin\n    uid: cpadmin\n    mail: cpadmin@cp.internal\n    userpassword: Password\n    employeeType: admin\n    ibm-entryuuid: e6c41859-ced3-4772-bfa3-6ebbc58ec78a\n\n    dn: uid=cpuser,ou=Users,dc=filenet,dc=internal\n    objectClass: inetOrgPerson\n    objectClass: top\n    objectClass: sds\n    cn: cpuser\n    sn: cpuser\n    uid: cpuser\n    mail: cpuser@cp.internal\n    userpassword: Password\n    ibm-entryuuid: 30183bb0-1012-4d23-8ae2-f94816b91a75\n\n// highlight-start\n    dn: uid=user1,ou=Users,dc=filenet,dc=internal\n    objectClass: inetOrgPerson\n    objectClass: top\n    objectClass: sds\n    cn: user1\n    sn: user1\n    uid: user1\n    mail: user1@cp.internal\n    userpassword: Password\n    ibm-entryuuid: 30183bb1-1013-5d23-9ae2-f94816bou812\n\n    dn: uid=user2,ou=Users,dc=filenet,dc=internal\n    objectClass: inetOrgPerson\n    objectClass: top\n    objectClass: sds\n    cn: user2\n    sn: user2\n    uid: user2\n    mail: user2@cp.internal\n    userpassword: Password\n    ibm-entryuuid: 30184bb1-1014-6d23-9ae2-f94816bou813\n// highlight-end\n\n    # Groups\n    dn: cn=cpadmins,ou=Groups,dc=filenet,dc=internal\n    objectClass: groupOfNames\n    objectClass: top\n    objectClass: sds\n    cn: cpadmins\n    ibm-entryuuid: 4196cb9e-1ed7-4c02-bb0d-792cb7bfa768\n    member: uid=cpadmin,ou=Users,dc=filenet,dc=internal\n\n    dn: cn=cpusers,ou=Groups,dc=filenet,dc=internal\n    objectClass: groupOfNames\n    objectClass: top\n    objectClass: sds\n    cn: cpusers\n    ibm-entryuuid: fc4ded27-8c6a-4a8c-ad9e-7be65369758c\n    member: uid=cpadmin,ou=Users,dc=filenet,dc=internal\n    member: uid=cpuser,ou=Users,dc=filenet,dc=internal\n\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"`ibm-entryuuid`` needs to be unique per user. There\u2019s no mechanism for generating that uuid at the moment\u2026 so I made them up."})}),"\n",(0,s.jsx)(n.p,{children:"Apply the updated ldif to the cluster"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl apply -f openldap-ldif-configmap.yaml\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now scale openldap deployment down and back up."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"kubectl scale deploy openldap-deploy \u2014replicas=0\nkubectl scale deploy openldap-deploy \u2014replicas=1\n"})}),"\n",(0,s.jsx)(n.p,{children:"You should see the following in the pod logs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'15:47:56.45 INFO  ==> Loading custom LDIF files...\n 15:47:56.45 WARN  ==> Ignoring LDAP_USERS, LDAP_PASSWORDS, LDAP_USER_DC and LDAP_GROUP environment variables...\n65047cac.1bb88f36 0x7f36ddeb1700 conn=1000 fd=12 ACCEPT from PATH=/opt/bitnami/openldap/var/run/ldapi (PATH=/opt/bitnami/openldap/var/run/ldapi)\n65047cac.1bbaca3f 0x7f36ddeb1700 conn=1000 op=0 BIND dn="cn=admin,dc=filenet,dc=internal" method=128\n65047cac.1bbb76dd 0x7f36ddeb1700 conn=1000 op=0 BIND dn="cn=admin,dc=filenet,dc=internal" mech=SIMPLE bind_ssf=0 ssf=71\n65047cac.1bbd7f8f 0x7f36ddeb1700 conn=1000 op=0 RESULT tag=97 err=0 qtime=0.000013 etime=0.000221 text=\n65047cac.1bbe0c82 0x7f36dd6b0700 connection_input: conn=1000 deferring operation: binding\n65047cac.1bbfcf39 0x7f36ddeb1700 conn=1000 op=1 ADD dn="dc=filenet,dc=internal"\n65047cac.1be17747 0x7f36ddeb1700 conn=1000 op=1 RESULT tag=105 err=0 qtime=0.000107 etime=0.002325 text=\n65047cac.1be350f4 0x7f36dd6b0700 conn=1000 op=2 ADD dn="ou=Users,dc=filenet,dc=internal"\n65047cac.1bfad443 0x7f36dd6b0700 conn=1000 op=2 RESULT tag=105 err=0 qtime=0.000012 etime=0.001574 text=\n65047cac.1bfbfc3a 0x7f36dd6b0700 conn=1000 op=3 ADD dn="ou=Groups,dc=filenet,dc=internal"\n65047cac.1c15023f 0x7f36dd6b0700 conn=1000 op=3 RESULT tag=105 err=0 qtime=0.000012 etime=0.001661 text=\n65047cac.1c166e75 0x7f36ddeb1700 conn=1000 op=4 ADD dn="uid=cpadmin,ou=Users,dc=filenet,dc=internal"\n65047cac.1c2ebc18 0x7f36ddeb1700 conn=1000 op=4 RESULT tag=105 err=0 qtime=0.000014 etime=0.001624 text=\n65047cac.1c3019bb 0x7f36dd6b0700 conn=1000 op=5 ADD dn="uid=cpuser,ou=Users,dc=filenet,dc=internal"\n65047cac.1c4aa25f 0x7f36dd6b0700 conn=1000 op=5 RESULT tag=105 err=0 qtime=0.000014 etime=0.001773 text=\n65047cac.1c4c41e2 0x7f36ddeb1700 conn=1000 op=6 ADD dn="uid=user1,ou=Users,dc=filenet,dc=internal"\n65047cac.1c6b50ba 0x7f36ddeb1700 conn=1000 op=6 RESULT tag=105 err=0 qtime=0.000012 etime=0.002063 text=\n65047cac.1c6ccfd1 0x7f36dd6b0700 conn=1000 op=7 ADD dn="uid=user2,ou=Users,dc=filenet,dc=internal"\n65047cac.1c88b8e6 0x7f36dd6b0700 conn=1000 op=7 RESULT tag=105 err=0 qtime=0.000012 etime=0.001858 text=\n65047cac.1c8a9710 0x7f36dd6b0700 conn=1000 op=8 ADD dn="cn=cpadmins,ou=Groups,dc=filenet,dc=internal"\n65047cac.1c9e27d3 0x7f36dd6b0700 conn=1000 op=8 RESULT tag=105 err=0 qtime=0.000036 etime=0.001332 text=\n65047cac.1c9faeb8 0x7f36ddeb1700 conn=1000 op=9 ADD dn="cn=cpusers,ou=Groups,dc=filenet,dc=internal"\n65047cac.1cb3a85f 0x7f36ddeb1700 conn=1000 op=9 RESULT tag=105 err=0 qtime=0.000012 etime=0.001335 text=\n65047cac.1cb4e3b8 0x7f36dd6b0700 conn=1000 op=10 UNBIND\n65047cac.1cb58551 0x7f36dd6b0700 conn=1000 fd=12 closed\nadding new entry "dc=filenet,dc=internal"\n\nadding new entry "ou=Users,dc=filenet,dc=internal"\n\nadding new entry "ou=Groups,dc=filenet,dc=internal"\n\nadding new entry "uid=cpadmin,ou=Users,dc=filenet,dc=internal"\n\nadding new entry "uid=cpuser,ou=Users,dc=filenet,dc=internal"\n\n// highlight-next-line\nadding new entry "uid=user1,ou=Users,dc=filenet,dc=internal"\n\n// highlight-next-line\nadding new entry "uid=user2,ou=Users,dc=filenet,dc=internal"\n\nadding new entry "cn=cpadmins,ou=Groups,dc=filenet,dc=internal"\n\nadding new entry "cn=cpusers,ou=Groups,dc=filenet,dc=internal"\n\n65047cac.1d163005 0x7f36de6b2700 daemon: shutdown requested and initiated.\n65047cac.1d197f74 0x7f36de6b2700 slapd shutdown: waiting for 0 operations/tasks to finish\n65047cac.1d22105d 0x7f371ec53740 slapd stopped.\n 15:47:57.50 INFO  ==> ** LDAP setup finished! **\n\n 15:47:57.52 INFO  ==> ** Starting slapd **\n65047cad.1fc3a637 0x7ff24732d740 @(#) $OpenLDAP: slapd 2.6.6 (Aug 18 2023 23:33:58) $\n        @a67812f7d14b:/bitnami/blacksmith-sandox/openldap-2.6.6/servers/slapd\n65047cad.2048d01e 0x7ff24732d740 slapd starting\n'})})]})}function p(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},4738:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-admin-secret-c89e9b73c7c1306aa26814ae3252bfa6.yaml"},7734:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-deploy-ab90307305172634bb3787e536c85662.yaml"},1678:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-env-configmap-d1c75012d3da08c9bf85b56dd8b567f6.yaml"},5432:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-ldif-configmap-d4e65381185c782c62ad91a87f6e4981.yaml"},8437:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-ldif-extra-users-configmap-cede6823ccdd5ca75b1391a7d746af79.yaml"},2221:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-schemas-configmap-eb246fd9ca1b115a0b59dac7ca8ea191.yaml"},2403:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-secrets-606100e5b76c6263cb6b7edbf28d6612.yaml"},7188:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/files/openldap-service-d90d948099ba46dd4fdc1eaf3a107ab6.yaml"},1151:(e,n,a)=>{a.d(n,{Z:()=>i,a:()=>l});var s=a(7294);const d={},t=s.createContext(d);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);