apiVersion: icp4a.ibm.com/v1
kind: FNCMCluster
metadata:
  name: fncmdeploy
  labels:
    app.kubernetes.io/instance: ibm-fncm
    app.kubernetes.io/managed-by: ibm-fncm
    app.kubernetes.io/name: ibm-fncm
    release: 5.5.4
spec:
  ## TIPS: The names of all variables in the spec field are converted to snake_case by the operator before running ansible
  ## For example, serviceAccount in the spec becomes service_account in ansible.
  ## It is recommended that you perform some type validation in Ansible on the variables to ensure that
  ## your application is receiving expected input.

  ## shared configuration among all tribe
  shared_configuration:
    sc_deployment_platform: OCP

  ldap_configuration:
    # the candidate value is "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "IBM Security Directory Server"
    lc_ldap_server: "172.16.194.107"
    lc_ldap_port: "389"
    lc_bind_secret: ldap-bind-secret # secret is expected to have ldapUsername and ldapPassword keys
    # lc_ldap_bind_dn: "cn=root" # Will remove it, and use K8S Secret to replace it
    lc_ldap_base_dn: "dc=hqpsidcdom,dc=com"
    lc_ldap_ssl_enabled: false
    # lc_ldap_bind_password: "{xor}GDoxNiosbg==" # Will remove it, and use K8S Secret to replace it
    lc_ldap_user_name_attribute: "*:cn"
    lc_ldap_user_display_name_attr: "cn"
    lc_ldap_group_base_dn: "dc=hqpsidcdom,dc=com"
    lc_ldap_group_name_attribute: "*:cn"
    lc_ldap_group_display_name_attr: "cn"
    lc_ldap_group_membership_search_filter: "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))"
    lc_ldap_group_member_id_map: "groupofnames:member"
    ad:
      lc_ad_gc_host: ""
      lc_ad_gc_port: ""
      lc_user_filter: "(&(cn=%v)(objectclass=person))"
      lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
    tds:
      lc_user_filter: "(&(cn=%v)(objectclass=person))"
      lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
  ext_ldap_configuration:
    # the candidate value is "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "Microsoft Active Directory"
    lc_ldap_server: "glow1.fyre.ibm.com"
    lc_ldap_port: "50002"
    # lc_ldap_bind_dn: "cn=vanUser1,ou=test1OU,dc=external,dc=com" # Will remove it, and use K8S Secret to replace it
    lc_ldap_base_dn: "ou=test1OU,dc=external,dc=com"
    lc_ldap_ssl_enabled: false
    # lc_ldap_bind_password: "{xor}CBkOHm1vJSV+" # Will remove it, and use K8S Secret to replace it
    lc_ldap_user_name_attribute: "*:cn"
    lc_ldap_user_display_name_attr: "cn"
    lc_ldap_group_base_dn: "ou=test1OU,dc=external,dc=com"
    lc_ldap_group_name_attribute: "*:cn"
    lc_ldap_group_display_name_attr: "cn"
    lc_ldap_group_membership_search_filter: "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))"
    lc_ldap_group_member_id_map: "groupofnames:member"
    ad:
      lc_ad_gc_host: ""
      lc_ad_gc_port: ""
      lc_user_filter: "(&(objectClass=person)(cn=%v))"
      lc_group_filter: "(&(objectClass=group)(cn=%v))"
    tds:
      lc_user_filter: ""
      lc_group_filter: ""
  datasource_configuration:
    # the candidate value is "db2" or "db2HADR" or "oracle" or "sqlserver"
    dc_database_type: "db2"
    dc_gcd_datasource:
      dc_common_gcd_datasource_name: "FNGCDDS"
      dc_common_gcd_xa_datasource_name: "FNGCDDSXA"
      database_servername: "9.30.188.87"
      database_name: "gcddb"
      database_port: "50000"
      # dc_common_database_instance_user: "db2inst1" # Will remove it, and use K8S Secret to replace it
      # dc_common_database_instance_password: "{xor}Dz4sLChvLTtrFHUM"  # Will remove it, and use K8S Secret to replace it
      dc_oracle_gcd_jdbc_url: "jdbc:oracle:thin:@//ecmoracle1.fyre.ibm.com:1521/orcl"
      dc_hadr_standby_servername: "oclv0462.svl.ibm.com"
      dc_hadr_standby_port: 50000
      dc_hadr_validation_timeout: 15
      dc_hadr_retry_interval_for_client_reroute: 15
      dc_hadr_max_retries_for_client_reroute: 3
    dc_os_datasources:
    - dc_common_os_datasource_name: "fnos1ds"
      dc_common_os_xa_datasource_name: "fnos1dsxa"
      database_servername: "9.30.188.87"
      database_name: "os1"
      database_port: "50000"
      dc_oracle_os_jdbc_url: "jdbc:oracle:thin:@//ecmoracle1.fyre.ibm.com:1521/orcl"
      # dc_common_database_instance_user: "db2inst1"  # Will remove it, and use K8S Secret to replace it
      # dc_common_database_instance_password: "{xor}Dz4sLChvLTtrFHUM"  # Will remove it, and use K8S Secret to replace it
      dc_hadr_standby_servername: "oclv0462.svl.ibm.com"
      dc_hadr_standby_port: 50000
      dc_hadr_validation_timeout: 3
      dc_hadr_retry_interval_for_client_reroute: 3
      dc_hadr_max_retries_for_client_reroute: 3
    - dc_common_os_datasource_name: "fnos2ds"
      dc_common_os_xa_datasource_name: "fnos2dsxa"
      database_servername: "9.30.188.87"
      database_name: "os2"
      database_port: "50000"
      dc_oracle_os_jdbc_url: "jdbc:oracle:thin:@//ecmoracle1.fyre.ibm.com:1521/orcl"
      # dc_common_database_instance_user: "db2inst1"  # Will remove it, and use K8S Secret to replace it
      # dc_common_database_instance_password: "{xor}Dz4sLChvLTtrFHUM"  # Will remove it, and use K8S Secret to replace it
      dc_hadr_standby_servername: "oclv0462.svl.ibm.com"
      dc_hadr_standby_port: 50000
      dc_hadr_validation_timeout: 3
      dc_hadr_retry_interval_for_client_reroute: 3
      dc_hadr_max_retries_for_client_reroute: 3
    dc_icn_datasource:
      dc_oracle_icn_jdbc_url: "jdbc:oracle:thin:@//ecmOracle1.fyre.ibm.com:1521/orcl"
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "9.30.188.87"
      database_port: "50000"
      database_name: "ICNDB"
      # dc_common_database_instance_user: "db2inst1"  # Will remove it, and use K8S Secret to replace it
      # dc_common_database_instance_password: "{xor}Dz4sLChvLTtrFHUM"  # Will remove it, and use K8S Secret to replace it
      dc_hadr_standby_servername: "oclv0462.svl.ibm.com"
      dc_hadr_standby_port: 50000
      dc_hadr_validation_timeout: 3
      dc_hadr_retry_interval_for_client_reroute: 3
      dc_hadr_max_retries_for_client_reroute: 3
    dc_odm_datasource:
      database_servername: "db2forodm"
      dc_common_database_port: "50000"
      dc_common_database_name: "db2db"
      dc_common_database_instance_user: "db2user"  # Will remove it, and use K8S Secret to replace it
      dc_common_database_instance_password: "{base64}UGFzc3cwcmQ0SypT"  # Will remove it, and use K8S Secret to replace it
  ## Monitor setting
  monitoring_configuration:
    mon_metrics_writer_option: "4"
    mon_metrics_service_endpoint: "9.9.9.9:2003"
    mon_bmx_group: "ibm"
    mon_bmx_metrics_scope_id: "1"
    mon_bmx_api_key: "testkey"
    mon_ecm_metrics_collect_interval: 60
    mon_ecm_metrics_flush_interval: 60
    mon_enable_plugin_pch: "test"
    mon_enable_plugin_mbean: "pch-mbean"
  ## Logging setting
  logging_configuration:
    mon_log_parse: "parse1"
    mon_log_shipper_option: "1"
    mon_log_service_endpoint: "9.9.9.9:5044"
    mon_bmx_logs_logging_token: "testtoken"
    mon_bmx_space_id: "1"
  ## production configuration for each Tribe
  ecm_configuration:
    fncm_secret_name: ibm-fncm-secret
    cpe:
      arch:
        amd64: "3 - Most preferred"
      replica_count: 1
      # Set UID within value of openshift.io/sa.scc.uid-range in namespace's specs,
      # If comment it, will use UID auto assigned by OCP
      # run_as_user: 1000110001
      image:
        repository: ecm-containerization-docker-local.artifactory.swg-devops.com/cpe
        tag: stable-csi
        pull_policy: Always
      ## Logging for workloads
      log:
       format: json
      ## resource
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1
          memory: 3072Mi
      ## Horizontal Pod Autoscaler
      auto_scaling:
        enabled: true
        max_replicas: 3
        min_replicas: 1
        target_cpu_utilization_percentage: 80
      ## cpe Production setting
      cpe_production_setting:
        time_zone: Etc/UTC
        jvm_initial_heap_percentage: 18
        jvm_max_heap_percentage: 33
        jvm_customize_options: ""
        gcd_jndi_name: FNGCDDS
        gcd_jndixa_name: FNGCDDSXA
        license_model: FNCM.PVUNonProd
        license: accept
      monitor_enabled: false
      logging_enabled: true
      ## Specify the name of the Existing Claim to be used by your application
      ## empty string means don't use an existClaim
      ## Existing Persistence parameters for CPE
      datavolume:
        existing_pvc_for_cpe_cfgstore: "cpe-cfgstore"
        existing_pvc_for_cpe_logstore: "cpe-logstore"
        existing_pvc_for_cpe_filestore: "cpe-filestore"
        existing_pvc_for_cpe_icmrulestore: "cpe-icmrulesstore"
        existing_pvc_for_cpe_textextstore: "cpe-textextstore"
        existing_pvc_for_cpe_bootstrapstore: "cpe-bootstrapstore"
        existing_pvc_for_cpe_fnlogstore: "cpe-fnlogstore"
      image_pull_secrets:
        name: "admin.registrykey"
    # css:
    #   arch:
    #     amd64: "3 - Most preferred"
    #   replica_count: 1
    #   # Set UID within value of openshift.io/sa.scc.uid-range in namespace's specs,
    #   # If comment it, will use UID auto assigned by OCP
    #   # run_as_user: 1000110001
    #   image:
    #     repository: ecm-containerization-docker-local.artifactory.swg-devops.com/css
    #     tag: latest-csi-release553
    #     pull_policy: Always
    #   ## Logging for workloads
    #   log:
    #     format: json

    #   ## resource and autoscaling setting
    #   resources:
    #     requests:
    #       cpu: 500m
    #       memory: 512Mi
    #     limits:
    #       cpu: 1
    #       memory: 4096Mi
    #   ## CSS Production setting
    #   css_production_setting:
    #     jvm_max_heap_percentage: 50
    #     license: accept
    #   monitor_enabled: false
    #   logging_enabled: true
    #   ## Specify the name of the Existing Claim to be used by your application
    #   ## empty string means don't use an existClaim
    #   ## Existing Persistence parameters for CSS
    #   datavolume:
    #     existing_pvc_for_css_cfgstore: "css-cfgstore"
    #     existing_pvc_for_css_logstore: "css-logstore"
    #     existing_pvc_for_css_tmpstore: "css-tempstore"
    #     existing_pvc_for_index: "css-indexstore"
    #     existing_pvc_for_css_customstore: "css-customstore"
    #   image_pull_secrets:
    #     name: "admin.registrykey"
    # cmis:
    #   arch:
    #     amd64: "3 - Most preferred"
    #   replica_count: 1
    #   # Set UID within value of openshift.io/sa.scc.uid-range in namespace's specs,
    #   # If comment it, will use UID auto assigned by OCP
    #   # run_as_user: 1000110001
    #   image:
    #     repository: ecm-containerization-docker-local.artifactory.swg-devops.com/cmis
    #     tag: latest-csi
    #     pull_policy: Always
    #   ## Logging for workloads
    #   log:
    #     format: json

    #   ## resource
    #   resources:
    #     # We usually recommend not to specify default resources and to leave this as a conscious
    #     # choice for the user. This also increases chances charts run on environments with little
    #     # resources, such as Minikube. If you do want to specify resources, uncomment the following
    #     # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #     requests:
    #       cpu: 500m
    #       memory: 256Mi
    #     limits:
    #       cpu: 1
    #       memory: 1536Mi

    #   ## Horizontal Pod Autoscaler
    #   auto_scaling:
    #     enabled: true
    #     max_replicas: 3
    #     min_replicas: 1
    #     target_cpu_utilization_percentage: 80

    #   ## CMIS Production setting
    #   cmis_production_setting:
    #     cmis_version: 1.1
    #     cpe_url:
    #     time_zone: Etc/UTC
    #     jvm_initial_heap_percentage: 40
    #     jvm_max_heap_percentage: 66
    #     jvm_customize_options: ""
    #     checkout_copycontent: true
    #     default_maxitems: 25
    #     cvl_cache: true
    #     secure_metadata_cache: false
    #     filter_hidden_properties: true
    #     querytime_limit: 180
    #     resumable_queries_forrest: true
    #     escape_unsafe_string_characters: false
    #     max_soap_size: 180
    #     print_pull_stacktrace: false
    #     folder_first_search: false
    #     ignore_root_documents: false
    #     supporting_type_mutability: false
    #     license: accept
    #   monitor_enabled: false
    #   logging_enabled: false
    #   ## global persistence settings
    #   datavolume:
    #   ## Specify the name of the Existing Claim to be used by your application
    #   ## empty string means don't use an existClaim
    #   ## Existing Persistence parameters for CMIS
    #     existing_pvc_for_cmis_cfgstore: "cmis-cfgstore"
    #     existing_pvc_for_cmis_logstore: "cmis-logstore"
    #   # secrect
    #   image_pull_secrets:
    #     name: "admin.registrykey"
    # crs:
    #   arch:
    #     amd64: "3 - Most preferred"
    #   replica_count: 1
    #   # Set UID within value of openshift.io/sa.scc.uid-range in namespace's specs,
    #   # If comment it, will use UID auto assigned by OCP
    #   # run_as_user: 1000110001
    #   image:
    #     repository: ecm-containerization-docker-local.artifactory.swg-devops.com/crs
    #     tag: latest-csi
    #     pull_policy: Always
    #   ## resource
    #   resources:
    #     requests:
    #       cpu: 500m
    #       memory: 512Mi
    #     limits:
    #       cpu: 1
    #       memory: 1536Mi
    #    ## Horizontal Pod Autoscaler
    #   auto_scaling:
    #     enabled: true
    #     max_replicas: 1
    #     min_replicas: 1
    #     target_cpu_utilization_percentage: 80
    #   ## CRS Production setting
    #   crs_production_setting:
    #     time_zone: Etc/UTC
    #     jvm_initial_heap_percentage: 40
    #     jvm_max_heap_percentage: 66
    #     jvm_customize_options: "-Dcom.ibm.ecm.content.graphql.enable.graphiql=TRUE"
    #     license_model: FNCM.PVUNonProd
    #     license: accept
    #     enableGraphIQL: FALSE
    #     cpe_uri: http://<hostname>:9080/wsi/FNCEWS40MTOM
    #   ## Monitor setting and Logiing setting
    #   monitor_enabled: false
    #   logging_enabled: true
    #   ## Specify the name of the Existing Claim to be used by your application
    #   ## empty string means don't use an existClaim
    #   ## Existing Persistence parameters for CGQL
    #   datavolume:
    #     existing_pvc_for_crs_cfgstore: "crs-cfgstore"
    #     existing_pvc_for_crs_logstore: "crs-logstore"
    #   imagePullSecrets:
    #     name: "admin.registrykey"
    # es:
    #   arch:
    #     amd64: "3 - Most preferred"
    #   replica_count: 1
    #   # Set UID within value of openshift.io/sa.scc.uid-range in namespace's specs,
    #   # If comment it, will use UID auto assigned by OCP
    #   # run_as_user: 1000110001
    #   image:
    #     repository: ecm-containerization-docker-local.artifactory.swg-devops.com/extshare
    #     tag: latest-csi-release306
    #     pull_policy: Always
    #   ## resource
    #   resources:
    #     requests:
    #       cpu: 500m
    #       memory: 512Mi
    #     limits:
    #       cpu: 1
    #       memory: 1536Mi
    #    ## Horizontal Pod Autoscaler
    #   auto_scaling:
    #     enabled: true
    #     max_replicas: 3
    #     min_replicas: 1
    #     target_cpu_utilization_percentage: 80
    #   ## External Share Production setting
    #   es_production_setting:
    #     time_zone: Etc/UTC
    #     jvm_initial_heap_percentage: 40
    #     jvm_max_heap_percentage: 66
    #     jvm_customize_options: ""
    #     license_model: FNCM.PVUNonProd
    #     license: accept
    #     es_dbtype: db2
    #     es_jndi_ds: ECMClientDS
    #     es_schema: ICNDB
    #     es_ts: ICNDB
    #     es_admin: ceadmin

    #   ## Monitor setting and Logiing setting
    #   monitor_enabled: false
    #   logging_enabled: true
    #   ## Specify the name of the Existing Claim to be used by your application
    #   ## empty string means don't use an existClaim
    #   ## Existing Persistence parameters for CGQL
    #   datavolume:
    #     existing_pvc_for_es_cfgstore: "es-cfgstore"
    #     existing_pvc_for_es_logstore: "es-logstore"
    #   imagePullSecrets:
    #     name: "admin.registrykey"
    # tm:
    #   arch:
    #     amd64: "3 - Most preferred"
    #   replica_count: 1
    #   # Set UID within value of openshift.io/sa.scc.uid-range in namespace's specs,
    #   # If comment it, will use UID auto assigned by OCP
    #   # run_as_user: 1000110001
    #   image:
    #     repository: ecm-containerization-docker-local.artifactory.swg-devops.com/taskmgr
    #     tag: latest
    #     pull_policy: Always
    #  ## LOGGING FOR WORKLOADS
    #   log:
    #     format: JSON
    #   ## resource
    #   resources:
    #     requests:
    #       cpu: 500m
    #       memory: 512Mi
    #     limits:
    #       cpu: 1
    #       memory: 1536Mi
    #    ## Horizontal Pod Autoscaler
    #   auto_scaling:
    #     enabled: true
    #     max_replicas: 3
    #     min_replicas: 1
    #     target_cpu_utilization_percentage: 80
    #   ## External Share Production setting
    #   tm_production_setting:
    #     time_zone: Etc/UTC
    #     jvm_initial_heap_percentage: 40
    #     jvm_max_heap_percentage: 66
    #     jvm_customize_options: "-Dcom.ibm.ecm.task.StartUpListener.defaultLogLevel=FINE,-Dcom.ibm.ecm.task.StartUpListener.enableHeartBeatMonitoring=false,-Dcom.ibm.ecm.task.StartUpListener.mailSessionJNDI=mail/CNMailSession,-Dcom.ibm.ecm.task.StartUpListener.persistenceUnit=ECMTaskManagerTask,-Dcom.ibm.ecm.task.StartUpListener.icnConfigDirPath=/opt/ibm/wlp/usr/servers/defaultServer/configDropins/overrides"
    #     license: accept
    #     tm_dbtype: db2
    #     tm_jndi_ds: ECMClientDS
    #     tm_schema: ICNDB
    #     tm_ts: ICNDB
    #     tm_admin: CEADMIN

    #   ## Monitor setting and Logiing setting
    #   monitor_enabled: false
    #   logging_enabled: true
    #   # ## Persistence parameters for /database
    #   # datavolume:
    #   # ## Persistence parameters for tm
    #   datavolume:
    #     existing_pvc_for_tm_cfgstore: "tm-cfgstore"
    #     existing_pvc_for_tm_logstore: "tm-logstore"
    #     existing_pvc_for_tm_pluginstore: "tm-pluginstore"
    #   image_pull_secrets:
    #     name: "admin.registrykey"
  navigator_configuration:
    ban_secret_name: ibm-ban-secret
    arch:
      amd64: "3 - Most preferred"
    replica_count: 1
    # Set UID within value of openshift.io/sa.scc.uid-range in namespace's specs,
    # If comment it, will use UID auto assigned by OCP
    # run_as_user: 1000110001
    image:
      repository: ecm-containerization-docker-local.artifactory.swg-devops.com/navigator
      tag: latest-csi-release306
      pull_policy: Always
      arbitrary_uid_enabled: true
    ## Logging for workloads
    log:
      format: json
    ## resource and autoscaling setting
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1536Mi

    ## Horizontal Pod Autoscaler
    auto_scaling:
      enabled: true
      max_replicas: 3
      min_replicas: 1
      target_cpu_utilization_percentage: 80

    ## ICN Production setting
    icn_production_setting:
      timezone: Etc/UTC
      jvm_initial_heap_percentage: 40
      jvm_max_heap_percentage: 66
      jvm_customize_options: ""
      icn_db_type: db2
      icn_jndids_name: ECMClientDS
      icn_schema: ICNDB
      icn_table_space: ICNDB
      icn_admin: CEADMIN
      navigator_mode: 2
      license: accept
      enable_appcues: false
      allow_remote_plugins_via_http: true
    monitor_enabled: false
    logging_enabled: false

    ## Persistence parameters for /database
    datavolume:
    ## Persistence parameters for ICN
      existing_pvc_for_icn_cfgstore: "icn-cfgstore"
      existing_pvc_for_icn_logstore: "icn-logstore"
      existing_pvc_for_icn_pluginstore: "icn-pluginstore"
      existing_pvc_for_icnvw_cachestore: "icn-vw-cachestore"
      existing_pvc_for_icnvw_logstore: "icn-vw-logstore"
      existing_pvc_for_icn_aspera: "icn-asperastore"
    image_pull_secrets:
      name: "admin.registrykey"
  # bai_configuration:
  #   common:
  #     helm:
  #       releaseName: "dbamc-bai"
  #     persistence:
  #       use_dynamic_provisioning: false
  #     settings:
  #       egress: true
  #       ingressTopic: "test"
  #       egressTopic: "test"
  #       serviceTopic: "test"
  #     kerberos:
  #       enabledForKafka: false
  #       enabledForHdfs: false
  #       realm: ""
  #       kdc: ""
  #       principal: ""
  #       keytab: ""
  #   kafka:
  #     username: ""
  #     password: ""
  #     bootstrapServers: "192.169.1.10"
  #     securityProtocol: "sasl_ssl"
  #     saslKerberosServiceName: ""
  #     serverCertificate: ""
  #     caCertificate: ""
  #   elasticsearch:
  #     url: ""
  #     username: ""
  #     password: ""
  #     serverCertificate: ""
  #   setup:
  #     image_name: "mycluster.icp:8500/dbamc/bai-setup:19.0.1"
  #   admin:
  #     image_name: "mycluster.icp:8500/dbamc/bai-admin:19.0.1"
  #     serviceType: "NodePort"
  #     externalPort: ""
  #     replicas: "1"
  #     username: "admin"
  #     password: "{base64}cGFzc3cwcmQ="
  #   flink:
  #     image_name: "mycluster.icp:8500/dbamc/bai-flink:19.0.1"
  #     jobCheckpointingInterval: "5000"
  #     hdfs:
  #       storageBucketUrl: "http://192.168.1.10"
  #       checkInterval: "300000"
  #       bucketThreshold: "900000"
  #       batchSize: "268435456"
  #     zookeeper:
  #       image_name: "mycluster.icp:8500/dbamc/bai-flink-zookeeper:19.0.1"
  #       replicas: "1"
  #     flinkPv:
  #       capacity: "20Gi"
  #       storageClassName: ""
  #       existingClaimName: ""
  #   ingestion:
  #     image_name: "mycluster.icp:8500/dbamc/bai-ingestion:19.0.1"
  #     recoveryPath: ""
  #   bpmn:
  #     image_name: "mycluster.icp:8500/dbamc/bai-bpmn:19.0.1"
  #     recoveryPath: ""
  #   icm:
  #     image_name: "mycluster.icp:8500/dbamc/bai-icm:19.0.1"
  #     recoveryPath: ""
  #   odm:
  #     image_name: "mycluster.icp:8500/dbamc/bai-odm:19.0.1"
  #     recoveryPath: ""
  #   content:
  #     image_name: "mycluster.icp:8500/dbamc/bai-content:19.0.1"
  #     recoveryPath: ""
  #   initImage:
  #     image_name: "mycluster.icp:8500/dbamc/bai-init:19.0.1"
  #   ibm-dba-ek:
  #     ibm-dba-ekelasticsearch:
  #       image_name: "mycluster.icp:8500/dbamc/bai-elasticsearch:19.0.1"
  #       init:
  #         image_name: "mycluster.icp:8500/dbamc/bai-init:19.0.1"
  #       security:
  #         initOpenDistroConfig: true
  #         openDistroConfigSecret: ""
  #       client:
  #         replicas: "1"
  #         serviceType: "NodePort"
  #         externalPort: ""
  #       master:
  #         replicas: "1"
  #       data:
  #         replicas: "1"
  #         storage:
  #           persistent: true
  #           useDynamicProvisioning: false
  #           size: "10Gi"
  #           storageClass: ""
  #         snapshotStorage:
  #           enabled: false
  #           useDynamicProvisioning: false
  #           size: "30Gi"
  #           storageClassName: ""
  #           existingClaimName: ""
  #     kibana:
  #       image_name: "mycluster.icp:8500/dbamc/bai-kibana:19.0.1"
  #       replicas: "1"
  #       username: "admin"
  #       password: "{base64}cGFzc3cwcmQ="
  #       serviceType: "NodePort"
  #       externalPort: ""
  # #######################################################
  # #####       baw configuration                  ########
  # #######################################################
  # baw_configuration:
  #   global:
  #     tls:
  #       tlsSecretName: ibm-baw-tls
  #     # Secret with Docker credentials
  #     ums:
  #       serviceType: "ClusterIP"
  #       hostname: "ums.9.111.141.118.nip.io"
  #       port: 443
  #       adminSecretName: ibm-dba-ums-admin-secret
  #     ws:
  #       serviceType: "ClusterIP"
  #       hostname: "spence1.fyre.ibm.com"
  #       port: 443
  #       replicas: 1
  #     # PersistenceVolumeClaim name with JDBC drivers
  #     existingClaimName: ums-jdbc-pvc
  #     workflowServerSecret: ibm-baw-baw-secret
  #     imagePullSecrets:
  #     jms:
  #       # Do not change it, it is created automatically.
  #       secretName: ibm-baw-jms-secret
  #     # Workflow Server administrator user
  #     administrator:
  #       username: deadmin
  #     # Indicate the deployment scenario, customization is based on it, e.g the database creation.
  #     scenario: PS
  #     #  Install pfs or not ?
  #     pfs:
  #       hostname: pfs.x.x.x.x.nip.io
  #       port: 31111
  #       secret_name: ibm-pfs-config
  #     noneProductionMode: true
  #   jms:
  #     image:
  #       repository: bpmbld02r.fr.eurolabs.ibm.com:5001/baw-jms-server
  #       tag: "0.0.2"
  #       pullPolicy: IfNotPresent
  #     initImage:
  #       repository: bpmbld02r.fr.eurolabs.ibm.com:5001/base-images/dba-keytool-initcontainer
  #       tag: "latest"
  #       pullPolicy: IfNotPresent
  #     resources:
  #       limits:
  #         memory: "2Gi"
  #         cpu: "1000m"
  #       requests:
  #         memory: "512Mi"
  #         cpu: "200m"
  #     storage:
  #       persistent: false
  #       size: "2Gi"
  #       useDynamicProvisioning: false
  #       accessModes:
  #       - ReadWriteOnce
  #       storageClass: ""
  #       selector:
  #         label: ""
  #         value: ""
  #   wfs:
  #     tls:
  #       tlsSecretName: ibm-baw-tls
  #       tlsTrustList:
  #       - ums-ingress-tls-secret
  #     image:
  #       repository: bpmbld02r.fr.eurolabs.ibm.com:5001/workflow/iaws-ps
  #       tag: 19.0.3
  #       pullPolicy: IfNotPresent
  #     # Secret with an Ingress certificate
  #     ingressSecretName:
  #     probe:
  #       ws:
  #         livenessProbe:
  #           initialDelaySeconds: 240
  #         readinessProbe:
  #           initialDelaySeconds: 360
  #     # ----------------------------------------------------------------------------------------
  #     #  Init container image settings
  #     # ----------------------------------------------------------------------------------------
  #     initImage:
  #       repository: bpmbld02r.fr.eurolabs.ibm.com:5001/base-images/dba-keytool-initcontainer
  #       tag: "latest"
  #       pullPolicy: IfNotPresent

  #     ltpaInitJob:
  #       repository: bpmbld02r.fr.eurolabs.ibm.com:5001/base-images/dba-keytool-jobcontainer
  #       tag: "latest"
  #       pullPolicy: IfNotPresent

  #     umsRegistryJob:
  #       repository: hyc-dba-base-image-docker-local.artifactory.swg-devops.com/base-images/dba-umsregistration-initjob
  #       tag: "latest"
  #       pullPolicy: IfNotPresent

  #     pfsBpdDatabaseInitJob:
  #       repository: bpmbld02r.fr.eurolabs.ibm.com:5001/workflow/pfs-bpd-database-init/daily/pfs8600_cf2019.09
  #       tag: "latest"

  #     dbCompatibilityInitJob:
  #       repository: hyc-dba-base-image-docker-local.artifactory.swg-devops.com/base-images/dba-dbcompatibility-initcontainer
  #       tag: "latest"
  #       pullPolicy: IfNotPresent

  #     upgradeJob:
  #       repository: bpmbld02r.fr.eurolabs.ibm.com:5001/workflow/iaws-psdb-handling
  #       tag: "19.0.3"
  #       pullPolicy: IfNotPresent
  #     # ----------------------------------------------------------------------------------------
  #     #  Resource limitation
  #     # ----------------------------------------------------------------------------------------
  #     resources:
  #       limits:
  #         cpu: 3
  #         memory: 2096Mi
  #       requests:
  #         cpu: 2
  #         memory: 1048Mi
  #     # ----------------------------------------------------------------------------------------
  #     #  Workflow Server ingress settings.
  #     # ----------------------------------------------------------------------------------------
  #     ingress:
  #       enabled: true
  #     # ----------------------------------------------------------------------------------------
  #     #  PS DB settings.
  #     # ----------------------------------------------------------------------------------------
  #     database:
  #       ssl: false
  #       sslsecretname: ibm-dba-baw-db2-cacert
  #       type: "DB2"
  #       serverName: "medius1.fyre.ibm.com"
  #       databaseName: "BPMPS2DB"
  #       port: "50000"
  #       secretName: ibm-baw-wfs-server-db-secret
  #       dbcheck:
  #         # The maximum waiting time (seconds) to check the database intialization status.
  #         waitTime: 900
  #         # The interval time (seconds) to check.
  #         intervalTime: 15
  #       hadr:
  #         standbydb_host:
  #         standbydb_port:

  #     # ----------------------------------------------------------------------------------------
  #     #  trace settings.
  #     # ----------------------------------------------------------------------------------------
  #     logs:
  #       consoleFormat: "json"
  #       consoleLogLevel: "INFO"
  #       consoleSource: "message,trace,accessLog,ffdc,audit"
  #       messageFormat: "basic"
  #       traceFormat: "ENHANCED"
  #       traceSpecification: "*=info"

  #     # ----------------------------------------------------------------------------------------
  #     #  Case related properties
  #     # ----------------------------------------------------------------------------------------
  #     case:
  #       install: false
  #       image: case:latest
  #       imagePullPolicy: IfNotPresent
  #       cpeUrl:
  #       bawHostName: 192.168.99.100.nip.io
  #       bawPort: 443
  #       icnHostName: chemo1.fyre.ibm.com
  #       icnPort: 9444

  #     # ----------------------------------------------------------------------------------------
  #     #  custom configuraiton in Liberty server.xml
  #     # ----------------------------------------------------------------------------------------
  #     customXml: |+
  #       <server>
  #         <!-- custom config settings go here -->
  #       </server>

  #     # ----------------------------------------------------------------------------------------
  #     #  custom configuraiton in 100Custom.xml
  #     # ----------------------------------------------------------------------------------------
  #     lombardiCustomXml: |+
  #       <properties>
  #         <!--Properties file for customer cluster scoped properties. -->
  #       </properties>

  # #############################################################
  # ######## IBM Process Federation Server configuration ########
  # #############################################################
  # pfs_configuration:

  #   noneProductionMode: true
  #   tls:
  #     tls_secret_name: ibm-baw-tls

  #   # ----------------------------------------------------------------------------------------
  #   #  IBM Process Federation Server configuration
  #   # ----------------------------------------------------------------------------------------
  #   pfs:
  #     image:
  #       repository: pfs
  #       tag: 0.0.2
  #       pull_policy: IfNotPresent
  #       image_pull_secrets: ""
  #       credentials:
  #         password:
  #         username:
  #         registry:

  #     hostname: pfs.9.112.229.72.nip.io
  #     port: 31111

  #     secret_name: ibm-pfs-config

  #     replicas: 1

  #     resources:
  #       requests:
  #         cpu: 500m
  #         memory: 512Mi
  #       limits:
  #         cpu: 2
  #         memory: 4Gi

  #     anti_affinity: hard

  #     service:
  #       type: NodePort
  #       host:
  #       tlsSecret:
  #       node_port: 31111

  #     config_dropins_overrides_secret: ibm-pfs-config
  #     resources_security_secret: ""

  #     saved_searches:
  #       index_name: ibmpfssavedsearches
  #       index_number_of_shards: 3
  #       index_number_of_replicas: 1
  #       index_batch_size: 100
  #       update_lock_expiration: 5m
  #       unique_constraint_expiration: 5m

  #     security:
  #       init_key_stores:
  #         enabled: true
  #         tls_secret_name: "ibm-baw-tls"
  #         image:
  #           repository: dba-keytool-initcontainer
  #           tag: "latest"
  #       keystore:
  #         filename: "keystore.jks"
  #         password:
  #         type: "JKS"
  #       truststore:
  #         filename: "truststore.jks"
  #         password:
  #         type: "JKS"
  #       sso:
  #         domain_name:
  #         cookie_name: "ltpatoken2"
  #         ltpa:
  #           filename: "ltpa.keys"
  #           password: "password"
  #           expiration: "120m"
  #           monitor_interval: "60s"
  #       ssl_protocol: SSL

  #     executor:
  #       max_threads: "80"
  #       core_threads: "40"

  #     rest:
  #       user_group_check_interval: "300s"
  #       system_status_check_interval: "60s"
  #       bd_fields_check_interval: "300s"

  #     custom_env_variables:
  #       names:
  #       # - name: MY_CUSTOM_ENVIRONMENT_VARIABLE
  #       secret:

  #     output:
  #       storage:
  #         use_dynamic_provisioning: false
  #         size: 5Gi
  #         storage_class: "pfs-ek-output"

  #     logs:
  #       storage:
  #         use_dynamic_provisioning: false
  #         size: 5Gi
  #         storage_class: "pfs-ek-logs"

  #   # ----------------------------------------------------
  #   #  PFS default Embedded Elasticsearch configuration
  #   # ----------------------------------------------------
  #   elasticsearch:
  #     replicas: 1
  #     service_type: NodePort
  #     external_port:
  #     anti_affinity: hard
  #     service_account:

  #     image:
  #       repository: pfs-elasticsearch-prod
  #       tag: "6.4.1"
  #       pull_policy: IfNotPresent
  #       credentials:
  #         password:
  #         username:
  #         registry:
  #       image_pull_secret: ""

  #     privileged: true

  #     init_image:
  #       repository: pfs-init-prod
  #       tag: latest

  #     probe_initial_delay: 90

  #     heap_size: "1024m"

  #     resources:
  #       limits:
  #         memory: "2Gi"
  #         cpu: "1000m"
  #       requests:
  #         memory: "1Gi"
  #         cpu: "100m"

  #     storage:
  #       persistent: true
  #       use_dynamic_provisioning: false
  #       size: 10Gi
  #       storage_class: "pfs-ek-data"

  #     snapshot_storage:
  #       enabled: false
  #       use_dynamic_provisioning: false
  #       size: 30Gi
  #       storage_class_name: ""
  #       existing_claim_name: ""

  #     security:
  #       keytool_image:
  #         repository: dba-keytool-initcontainer
  #         tag: "latest"
  #       nginx_image:
  #         repository: nginx
  #         tag: "1.15.2"
  #       tls_secret:
  #       users_secret: ""

  # odm_configuration:
  #   common:
  #     helm:
  #       releaseName: "dbamc-odm"
  #     image:
  #       repository: "mycluster.icp:8500/default"
  #       tag: "8.10.2.0"
  #       pullPolicy: "IfNotPresent"
  #       pullSecrets: ""
  #       arch: "amd64"
  #     service:
  #       enableTLS: true
  #       type: "NodePort"
  #     kafka:
  #       ingressTopic: ""
  #       bootstrapServers: ""
  #       securityProtocol: "sasl_ssl"
  #       username: ""
  #       password: ""
  #       saslKerberosServiceName: ""
  #       serverCertificate: ""
  #       defaultRealmName: ""
  #       kdcHost: ""
  #       principal: ""
  #       keytab: ""
  #     readinessProbe:
  #       initialDelaySeconds: "5"
  #       periodSeconds: "5"
  #       failureThreshold: "45"
  #       timeoutSeconds: "5"
  #     livenessProbe:
  #       initialDelaySeconds: "300"
  #       periodSeconds: "10"
  #       failureThreshold: "10"
  #       timeoutSeconds: "5"
  #   decisionServerRuntime:
  #     replica_count: "1"
  #     resources:
  #       requests:
  #         cpu: "500m"
  #         memory: "512Mi"
  #       limits:
  #         cpu: "2"
  #         memory: "1024Mi"
  #   decisionServerConsole:
  #     resources:
  #       requests:
  #         cpu: "500m"
  #         memory: "512Mi"
  #       limits:
  #         cpu: "2"
  #         memory: "1024Mi"
  #   decisionCenter:
  #     persistenceLocale: "en_us"
  #     replica_count: "1"
  #     resources:
  #       requests:
  #         cpu: "500m"
  #         memory: "512Mi"
  #       limits:
  #         cpu: "2"
  #         memory: "1024Mi"
  #   decisionRunner:
  #     replica_count: "1"
  #     resources:
  #       requests:
  #         cpu: "500m"
  #         memory: "512Mi"
  #       limits:
  #         cpu: "2"
  #         memory: "1024Mi"
  #   internalDatabase:
  #     databaseName: "odmdb"
  #     user: "odmusr"
  #     password: ""
  #     persistence:
  #       enabled: true
  #       useDynamicProvisioning: false
  #       storageClassName: ""
  #       resources:
  #         requests:
  #           storage: "5Gi"
  #     resources:
  #       requests:
  #         cpu: "500m"
  #         memory: "512Mi"
  #       limits:
  #         cpu: 2
  #         memory: "4096Mi"
  #   externalCustomDatabase:
  #     datasourceRef: ""
  #     driverPvc: ""
  #   customization:
  #     securitySecretRef: ""
  #     authSecretRef: "ldap"
  #     dedicatedNodeLabel: ""
  #   misc:
  #     chart_name: "ibm-odm-prod-2.1.0"
#  initialize_configuration:
#  #  init_log_path: "{{ shared_configuration.sc_icp4a_base_dir }}/logs/ibacc-init"
#    ic_cpe_information:
#      cpe_user: "ceadmin"
#      cpe_pass: "{xor}GDoxNiosbg=="
#    ic_domain_creation:
#      domain_name: "P8DOMAIN"
#      svc_user: "ceadmin"
#      svc_user_password: "{xor}GDoxNiosbg=="
#      encryption_key: "128"
#    ic_ldap_creation:
#      ic_ldap_admin_user_name:
#      - "ceadmin"
#      ic_ldap_admins_groups_name:
#      - "P8Administrators"
#      ic_ldap_name: "ldap_name"
#    ic_obj_store_creation:
#      object_stores:
#      - oc_cpe_obj_store_display_name: "BSOS1"
#        oc_cpe_obj_store_symb_name: "BSOS1"
#        oc_cpe_obj_store_conn:
#          name: "objectstore1_connection"
#          site_name: "InitialSite"
#          dc_os_datasource_name: "fnos1ds"
#          dc_os_xa_datasource_name: "fnos1dsxa"
#        oc_cpe_obj_store_schema: "DB2INST1"
#        oc_cpe_obj_store_admin_user_groups:
#        - "ceadmin"
#        # Array of users
#        oc_cpe_obj_store_basic_user_groups:
#        oc_cpe_obj_store_addons: true
#        oc_cpe_obj_store_addons_list:
#        - "{CE460ADD-0000-0000-0000-000000000004}"
#        - "{CE460ADD-0000-0000-0000-000000000001}"
#        - "{CE460ADD-0000-0000-0000-000000000003}"
#        - "{CE460ADD-0000-0000-0000-000000000005}"
#        - "{CE511ADD-0000-0000-0000-000000000006}"
#        - "{CE460ADD-0000-0000-0000-000000000008}"
#        - "{CE460ADD-0000-0000-0000-000000000007}"
#        - "{CE460ADD-0000-0000-0000-000000000009}"
#        - "{CE460ADD-0000-0000-0000-00000000000A}"
#        - "{CE460ADD-0000-0000-0000-00000000000B}"
#        - "{CE460ADD-0000-0000-0000-00000000000D}"
#        - "{CE511ADD-0000-0000-0000-00000000000F}"
#        oc_cpe_obj_store_asa_name: "design_storage"
#        oc_cpe_obj_store_asa_file_systems_storage_device_name: "design_file_system_storage"
#        oc_cpe_obj_store_asa_root_dir_path: "/opt/ibm/asa/os1_storagearea1"
#        oc_cpe_obj_store_enable_workflow: true
#        oc_cpe_obj_store_workflow_region_name: "design_region_name"
#        oc_cpe_obj_store_workflow_region_number: 1
#        oc_cpe_obj_store_workflow_data_tbl_space: "vwdata_ts"
#        oc_cpe_obj_store_workflow_index_tbl_space: ""
#        oc_cpe_obj_store_workflow_blob_tbl_space: ""
#        oc_cpe_obj_store_workflow_admin_group: "P8Administrators"
#        oc_cpe_obj_store_workflow_config_group: "P8Administrators"
#        oc_cpe_obj_store_workflow_date_time_mask: "mm/dd/yy hh:tt am"
#        oc_cpe_obj_store_workflow_locale: "en"
#        oc_cpe_obj_store_workflow_pe_conn_point_name: "pe_conn_bsos1"
#    ic_css_creation:
#      - css_site_name: "Initial Site"
#        css_text_search_server_name: "{{ meta.name }}-css-1"
#        affinity_group_name: "aff_group"
#        css_text_search_server_status: 0
#        css_text_search_server_mode: 0
#        css_text_search_server_ssl_enable: "true"
#        css_text_search_server_credential: "RNUNEWc="
#        css_text_search_server_host: "{{ meta.name }}-css-svc-1"
#        css_text_search_server_port: 8199
#    ic_css_index_area:
#      - object_store_name: "BSOS1"
#        index_area_name: "bsos1_index_area"
#        affinity_group_name: "aff_group"
#        root_dir: "/opt/ibm/indexareas"
#        max_indexes: 20
#        max_objects_per_index: 10000
#    ic_enable_cbr:
#      - object_store_name: "BSOS1"
#        class_name: "Document"
#        indexing_languages: "en"
#    ic_icn_init_info:
#      icn_user: "ceadmin"
#      icn_pass: "{xor}GDoxNiosbg=="
#      icn_repos:
#      - add_repo_id: "test_repo1"
#        add_repo_ce_wsi_url: "https://172.16.165.43:30634/wsi/FNCEWS40MTOM/"
#        add_repo_os_sym_name: "BSOS1"
#        add_repo_os_dis_name: "BSOS1"
#        add_repo_workflow_enable: false
#        add_repo_work_conn_pnt: "pe_conn_bsos1:1"
#        add_repo_protocol: "FileNetP8WSI"
#     # - add_repo_id: "test_repo2"
#     #   add_repo_ce_wsi_url: "https://172.16.165.43:30634/wsi/FNCEWS40MTOM/"
#     #   add_repo_os_sym_name: "BSOS3"
#     #   add_repo_os_dis_name: "BSOS3"
#     #   add_repo_workflow_enable: true
#     #   add_repo_work_conn_pnt: "pe_conn_bsos3:1"
#     #   add_repo_protocol: "FileNetP8WSI"
#      icn_desktop:
#      - add_desktop_id: "test"
#        add_desktop_name: "icn_desktop"
#        add_desktop_description: "This is ICN desktop"
#        add_desktop_is_default: false
#        add_desktop_repo_id: "test_repo1"
#        add_desktop_repo_workflow_enable: true
#     # - add_desktop_id: "demotest"
#     #   add_desktop_name: "icn_desktop_demo"
#     #   add_desktop_description: "Just Another desktop"
#     #   add_desktop_is_default: false
#     #   add_desktop_repo_id: "test_repo2"
#     #   add_desktop_repo_workflow_enable: false
  # verify_configuration:
  #   vc_cpe_verification:
  #     vc_cpe_information:
  #       cpe_user: ""
  #       cpe_pass: ""
  #     vc_cpe_folder:
  #     - folder_cpe_obj_store_name: ""
  #       folder_cpe_folder_path: "/TESTFOLDER"
  #     vc_cpe_document:
  #     - doc_cpe_obj_store_name: ""
  #       doc_cpe_folder_name: "/TESTFOLDER"
  #       doc_cpe_doc_title: "test_title"
  #       DOC_CPE_class_name: "Document"
  #       doc_cpe_doc_content: "This is a simple document test"
  #       doc_cpe_doc_content_name: "doc_content_name"
  #     vc_cpe_cbr:
  #     - cbr_cpe_obj_store_name: ""
  #       cbr_cpe_class_name: "Document"
  #       cbr_cpe_search_string: "is a simple"
  #     vc_cpe_workflow:
  #     - workflow_cpe_connection_point: ""
  #   vc_icn_verification:
  #     - vc_icn_repository: ""
  #       vc_icn_desktop_id: ""
