actions:
  metadata:
    name: fncmOperatorSetup
    description: The actions required to install the CP4A cluster resources
  actionDefs:
    installOperator:
      metadata:
        name: "installOperator"
        description: "install the fncm operator"
        case.launcher.type: "script"
        case.cli.alias: "install-operator"
        case.launcher.isdefault: true
      roles:
      - clusterAdmin
      requires:
        metadata:
          message:
            onFailure: |
              The installOperatorNative action must be run on OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sResources/workerIntelLinux"
        - "/case/prereqs/k8sDistros/openshift"

      # User must have the ability to create cluster roles and custom resource definitions
      k8sPermissions:
        rules:
        - rule:
            group: rbac.authorization.k8s.io
            resource: clusterroles
            verbs:
            - get
            - list
            - watch
            - create
            - patch
            - update
            version: '*'
        - rule:
            group: apiextensions.k8s.io
            resource: customresourcedefinitions
            verbs:
            - get
            - list
            - watch
            - create
            - patch
            - update
            version: v1beta1
        - ifExpression:
            "/prereqs/k8sDistros/openshift"
          rule:
            group: security.openshift.io
            resource: securitycontextconstraints
            verbs:
            - get
            - list
            - watch
            - create
            - patch
            - update

# actions related to catalog
    installCatalog:
      metadata:
        name: "installCatalog"
        description: "install the fncm operator catalog"
        case.launcher.type: "script"
        case.cli.alias: "install-catalog"
      roles:
      - clusterAdmin
      requires:
        metadata:
          message:
            onFailure: |
              The installCatalog action must be run on either OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
              The client must have oc installed to execute the launcher script.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sResources/workerIntelLinux"
        - "/case/prereqs/k8sDistros/openshift"
        - "/case/prereqs/client/oc"
        - "/case/prereqs/client/cloudctl"
      k8sPermissions:
        rules: []

    installOperatorNative:
      metadata:
        name: "installOperatorNative"
        description: "Installs FNCM operator by applying k8s manifests"
        case.launcher.type: "script"
        case.cli.alias: "install-operator-native"
      roles:
      - clusterAdmin
      # must be iks, icp or ocp AND Kubernetes 1.11.0 or later running on amd64 Linux
      requires:
        metadata:
          message:
            onFailure: |
              The installOperatorNative action must be run on OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sResources/workerIntelLinux"
        - "/case/prereqs/k8sDistros/openshift"
        - "/case/prereqs/client/oc"
        - "/case/prereqs/client/cloudctl"
        - "/case/prereqs/k8sResources/restrictedSCC"
      k8sPermissions:
        rules: []

    uninstallOperator:
      metadata :
        name: "uninstallOperator"
        description: "Uninstall the FNCM operator"
        case.launcher.type: "script"
        case.cli.alias: "uninstall-operator"
      roles:
      - clusterAdmin
      # must be iks, ocp AND Kubernetes 1.11.0 or later running on amd64 Linux
      requires:
        metadata:
          message:
            onFailure: |
              The uninstallOperator action must be run on either OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sResources/workerIntelLinux"
        - "/case/prereqs/k8sDistros/openshift"
        - "/case/prereqs/client/oc"
        - "/case/prereqs/client/cloudctl"

      k8sPermissions:
        rules:
        - rule:
            group: rbac.authorization.k8s.io
            resource: clusterroles
            verbs:
            - '*'
        - rule:
            group: apiextensions.k8s.io
            resource: customresourcedefinitions
            verbs:
            - '*'

    uninstallOperatorNative:
      metadata :
        name: "uninstallOperatorNative"
        description: "uninstall the FNCM operator"
        case.launcher.type: "script"
        case.cli.alias: "uninstall-operator-native"
      roles:
      - clusterAdmin
      # must be iks, icp or ocp AND Kubernetes 1.11.0 or later running on amd64 Linux
      requires:
        metadata:
          message:
            onFailure: |
              The uninstallOperatorNative action must be run on either IBM Cloud or OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sResources/workerIntelLinux"
        - "/case/prereqs/k8sDistros/openshift"
        - "/case/prereqs/client/oc"
        - "/case/prereqs/client/cloudctl"
      k8sPermissions:
        rules: []

    uninstallCatalog:
      metadata:
        name: "uninstallCatalog"
        description: "uninstall FNCM catalog"
        case.launcher.type: "script"
        case.cli.alias: "uninstall-catalog"
      roles:
      - clusterAdmin
      requires: "/case/prereqs/k8sDistros/openshift"
      k8sPermissions:
        rules: []

# actions related to airgap

    configureCredsAirgap:
      metadata:
        name: "configureCredsAirgap"
        description: "configures login credentails for an image registry"
        case.launcher.type: "script"
        case.cli.alias: "configure-creds-airgap"
      roles:
      - clusterAdmin
      k8sPermissions:
        rules: []

    configureClusterAirgap:
      metadata:
        name: "configureClusterAirgap"
        description: "configures global pullsecret and imagesourcecontentpolicy"
        case.launcher.type: "script"
        case.cli.alias: "configure-cluster-airgap"
      roles:
      - clusterAdmin
      requires:
        metadata:
          message:
            onFailure: |
              The configureClusterAirgap action must be run on either OpenShift Container Platform on amd64 Linux.
              The minimum level of Kubernetes on each platform are described in the CASE prerequisites.
              The client must have oc installed to execute the launcher script.
        and:
        - "/case/prereqs/k8sDistros/kubernetes"
        - "/case/prereqs/k8sResources/workerIntelLinux"
        - "/case/prereqs/k8sDistros/openshift"
        - "/case/prereqs/client/oc"
      k8sPermissions:
        rules: []

    mirrorImages:
      metadata:
        name: "mirrorImages"
        description: "Mirrors the images to a local registry using oc"
        case.launcher.type: "script"
        case.cli.alias: "mirror-images"
      roles:
      - clusterAdmin
      requires: 
        and:
        - "/case/prereqs/client/oc"
        - "/case/prereqs/client/oc"
      k8sPermissions:
        rules: []

# actions related to local docker registry

    initRegistry:
      metadata:
        name: "initRegistry"
        description: "Initialize a local docker registry"
        case.launcher.type: "script"
        case.cli.alias: "init-registry"
      roles:
      - clusterAdmin
      requires:
        and:
          - "/case/prereqs/client/openssl"
          - "/case/prereqs/client/htpasswd"
      k8sPermissions:
        rules: []

    startRegistry:
      metadata:
        name: "startRegistry"
        description: "Start a local docker registry container"
        case.launcher.type: "script"
        case.cli.alias: "start-registry"
      roles:
      - clusterAdmin
      requires:
        or:
          - "/case/prereqs/client/podman"
          - "/case/prereqs/client/docker"
      k8sPermissions:
        rules: []

    stopRegistry:
      metadata:
        name: "stopRegistry"
        description: "Stop a local docker registry container"
        case.launcher.type: "script"
        case.cli.alias: "stop-registry"
      roles:
      - clusterAdmin
      requires:
        or:
          - "/case/prereqs/client/podman"
          - "/case/prereqs/client/docker"
      k8sPermissions:
        rules: []
